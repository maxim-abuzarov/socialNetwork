{"version":3,"sources":["components/content/profile/profile.module.css","redux/reducers/messagesReducer.js","redux/reducers/usersReducer.js","components/common/loading/loading.module.css","api/api.js","redux/reducers/profileReducer.js","redux/reducers/appReducer.js","redux/store.js","hoc/withSuspense.js","assets/img/vk.svg","assets/img/github.svg","components/footer/Footer.jsx","assets/img/profile.svg","assets/img/messages.svg","assets/img/users.svg","components/navigation/friends/Friend.jsx","components/navigation/Navigation.jsx","components/navigation/NavigationContainer.jsx","components/content/profile/status/ProfileStatus.jsx","components/content/profile/info/ProfileInfoForm.jsx","components/content/profile/Profile.jsx","components/content/posts/post/Post.jsx","components/content/posts/Posts.jsx","components/content/posts/PostsContainer.jsx","components/content/Content.jsx","components/content/ContentContainer.jsx","assets/img/logo.svg","components/header/Header.jsx","components/header/HeaderContainer.jsx","App.js","index.js","components/common/loading/Loading.jsx","components/common/formsControl/FormsControl.jsx","redux/reducers/asideReducer.js","components/common/formsControl/formscontol.module.css","components/navigation/navigation.module.css","assets/img/unknownUser.jpeg","redux/reducers/authReducer.js","components/content/posts/post/post.module.css","components/header/header.module.css","components/footer/footer.module.css","components/navigation/friends/friend.module.css","utils/validators/validators.js","components/content/posts/posts.module.css"],"names":["module","exports","SEND_MESSAGE","initialState","messagesData","sendMessage","newMessageText","type","messagesReducer","state","action","newMessage","id","message","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","FOLLOW","UNFOLLOW","TOGGLE_IS_LOADING","TOGGLE_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isLoading","followingProgress","toggleIsLoading","toggleFollowingProgress","userId","setCurrentPage","pageNumber","followSuccess","unfollowSuccess","getUsers","dispatch","a","usersAPI","data","items","totalCount","follow","resultCode","getFriendsList","unfollow","usersReducer","filter","map","user","followed","instance","axios","withCredentials","baseURL","headers","get","then","response","getFriends","post","delete","authAPI","authMe","login","email","password","rememberMe","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfileData","profileData","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","postsData","profile","setStatus","getUserProfile","profileReducer","newPost","author","date","title","text","newPostText","url","avatar","photos","INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","aside","asideReducer","usersPage","auth","authReducer","app","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Component","props","Suspense","fallback","Loading","Footer","className","footerClasses","footer","leftCol","href","target","rel","src","vkIcon","alt","githubIcon","rightCol","Friend","name","to","friendClasses","friend","toLowerCase","photo","Navigation","friends","friendsList","large","navigationClasses","navigation","activeClassName","active","profileIcon","messagesIcon","usersIcon","friendsBlock","length","NavigationContainer","this","prevProps","prevState","snapshot","React","connect","ProfileStatus","useState","editMode","setEditMode","useEffect","onBlur","autoFocus","onFocus","e","select","onChange","currentTarget","value","onClick","isOwner","ProfileInfoReduxForm","reduxForm","handleSubmit","error","onSubmit","profileClasses","dataItemName","Field","component","Input","placeholder","field","dataItemCheck","dataItemField","Textarea","fieldText","dataItemContacts","Object","keys","contacts","key","social","formControlClasses","formSummaryError","button","ProfileInfo","goToEditMode","dataItem","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","Profile","profileLoading","upload","files","info","fullName","initialValues","Post","postClasses","header","left","content","maxLength30","maxLengthCreator","ReduxPostForm","onSubmitSuccess","result","reset","validate","requiredField","Posts","posts","reverse","postsClasses","addPost","values","Content","PostsContainer","ContentContainer","match","params","authorizedUserId","history","push","refreshProfile","compose","withRouter","isAuth","file","getState","stopSubmit","_error","messages","Promise","reject","Header","headerClasses","logotype","logo","HeaderContainer","MessagesContainer","lazy","UsersContainer","LoginPage","App","initializeApp","path","render","promise","getAuthUserData","all","ReactDOM","document","getElementById","loadingClasses","loading","input","meta","hasError","touched","formControl","GET_FRIENDS","SET_USER_DATA","setAuthUserData","payload","maxLength"],"mappings":"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","file":"static/js/main.f9c8f989.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1J6m0\",\"profileLoading\":\"profile_profileLoading__6b-v7\",\"photo\":\"profile_photo__1Sw9L\",\"upload\":\"profile_upload__3MOeI\",\"info\":\"profile_info__1XW5B\",\"status\":\"profile_status__3r-jF\",\"data\":\"profile_data__3iiHG\",\"button\":\"profile_button__jGi_t\",\"dataItem\":\"profile_dataItem__2CDL6\",\"dataItemName\":\"profile_dataItemName__3KMiB\",\"dataItemCheck\":\"profile_dataItemCheck__2QLfe\",\"dataItemContacts\":\"profile_dataItemContacts__lxXNs\",\"dataItemField\":\"profile_dataItemField__1EQxQ\",\"contacts\":\"profile_contacts__3JCNb\",\"field\":\"profile_field__AP8Tm\",\"fieldText\":\"profile_fieldText__2LKmb\",\"social\":\"profile_social__3CJJu\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    messagesData: [],\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let newMessage = {\n                id: 4,\n                message: action.newMessageText\n            };\n            return {\n                ...state,\n                messagesData: [...state.messagesData, newMessage],\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const sendMessage = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\n\nexport default messagesReducer;\n","import {usersAPI} from \"../../api/api\";\nimport {getFriendsList} from \"./asideReducer\";\n\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst TOGGLE_IS_LOADING = 'TOGGLE-IS-LOADING';\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE-FOLLOWING-PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 12,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isLoading: false,\n    followingProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users,\n            }\n\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.pageNumber,\n            }\n\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalCount,\n            }\n\n        case TOGGLE_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n\n        case TOGGLE_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingProgress: action.isLoading\n                    ? [...state.followingProgress, action.userId]\n                    : state.followingProgress.filter(id => id !== action.userId)\n            }\n\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: true}\n                    }\n                    return user;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: false}\n                    }\n                    return user;\n                })\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading})\nexport const toggleFollowingProgress = (isLoading, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isLoading, userId})\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber})\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\n\nexport const getUsers = (currentPage, pageSize) => {\n\n    return async (dispatch) => {\n        dispatch(toggleIsLoading(true));\n        dispatch(setCurrentPage(currentPage))\n\n        const data = await usersAPI.getUsers(currentPage, pageSize);\n\n        dispatch(toggleIsLoading(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nexport const follow = (userId) => {\n\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId));\n\n        const response = await usersAPI.follow(userId)\n\n        if (response.data.resultCode === 0) {\n            dispatch(followSuccess(userId))\n            dispatch(getFriendsList())\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const unfollow = (userId) => {\n\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId));\n\n        const response = await usersAPI.unfollow(userId);\n\n        if (response.data.resultCode === 0) {\n            dispatch(unfollowSuccess(userId))\n            dispatch(getFriendsList())\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport default usersReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loading_loading__1Af0M\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': 'a60e2925-9e48-4e88-a8f4-0ca5f14206c3'},\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 12) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            });\n    },\n\n    getFriends() {\n        return instance.get(`users?friend=true`)\n            .then(response => {\n                return response.data\n            });\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n}\n\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`)\n    },\n\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status});\n    },\n\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile)\n\n        return instance.put(`profile/photo`, formData);\n    },\n\n    saveProfileData(profileData) {\n        return instance.put(`profile`, profileData)\n    },\n}\n","import avatar from './../../assets/img/unknownUser.jpeg';\nimport {profileAPI} from \"../../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS';\n\nlet initialState = {\n    postsData: [],\n    profile: null,\n    status: null,\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 1,\n                author: 'Maxim Abuzarov',\n                date: '15 June 2021',\n                title: 'Post #1',\n                text: action.newPostText,\n                url: avatar,\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n            }\n\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile,\n            }\n\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status,\n            }\n\n        case SAVE_PHOTO_SUCCESS:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await profileAPI.getProfile(userId);\n\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId);\n\n    dispatch(setStatus(response.data))\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    const response = await profileAPI.updateStatus(status);\n\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    const response = await profileAPI.savePhoto(file);\n\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\n\nexport const saveProfileData = (profileData) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfileData(profileData);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId))\n    } else {\n        dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}))\n\n        return Promise.reject(response.data.messages[0])\n    }\n}\n\nexport default profileReducer;\n","import {getAuthUserData} from \"./authReducer\";\n\nconst INITIALIZED = 'INITIALIZED';\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED})\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData())\n\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport messagesReducer from \"./reducers/messagesReducer\";\nimport asideReducer from \"./reducers/asideReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./reducers/appReducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: messagesReducer,\n    aside: asideReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    form: formReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from \"react\";\nimport Loading from \"../components/common/loading/Loading\";\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <React.Suspense fallback={<Loading />}>\n                <Component {...props} />\n            </React.Suspense>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/vk.e9553eae.svg\";","export default __webpack_public_path__ + \"static/media/github.9544f549.svg\";","import React from 'react';\nimport footerClasses from './footer.module.css';\nimport vkIcon from './../../assets/img/vk.svg'\nimport githubIcon from './../../assets/img/github.svg';\n\nconst Footer = () => {\n    return (\n        <footer className={footerClasses.footer}>\n\n            <div className={footerClasses.leftCol}>\n                <ul>\n                    <li>\n                        <a href=\"https://vk.com/maxim.abuzarov\" target='_blank' rel=\"noreferrer\">\n                            <img src={vkIcon} alt=\"VK icon\"/>\n                            <span>VK</span>\n                        </a>\n                    </li>\n                </ul>\n                <ul>\n                    <li>\n                        <a href=\"https://github.com/maxim-abuzarov\" target='_blank' rel=\"noreferrer\">\n                            <img src={githubIcon} alt=\"Github icon\"/>\n                            <span>GitHub</span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <div className={footerClasses.rightCol}>\n                <p>\t&copy; Abuzarov Maxim, 2021</p>\n            </div>\n\n        </footer>\n    );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/profile.d54ae6c5.svg\";","export default __webpack_public_path__ + \"static/media/messages.4a3a2c6a.svg\";","export default __webpack_public_path__ + \"static/media/users.9c5d22db.svg\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport friendClasses from './friend.module.css';\nimport avatar from './../../../assets/img/unknownUser.jpeg';\n\nconst Friend = ({id, name, url}) => {\n    return (\n        <NavLink to={'/profile/' + id} className={friendClasses.friend}>\n\n            <div className={friendClasses.name}>\n\n                {name.toLowerCase()}\n\n            </div>\n\n            <div className={friendClasses.photo}>\n\n                <img src={url ? url : avatar} alt='Friend avatar'/>\n\n            </div>\n\n        </NavLink>\n    );\n};\n\nexport default Friend;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport navigationClasses from './navigation.module.css';\nimport profileIcon from './../../assets/img/profile.svg';\nimport messagesIcon from './../../assets/img/messages.svg';\nimport usersIcon from './../../assets/img/users.svg';\nimport Friend from \"./friends/Friend\";\nimport Loading from \"../common/loading/Loading\";\n\nconst Navigation = ({friends, isLoading}) => {\n    let friendsList = friends.map(friend => <Friend\n        key={friend.id}\n        id={friend.id}\n        name={friend.name}\n        url={friend.photos.large}\n    />)\n\n    return (\n        <nav className={navigationClasses.navigation}>\n            <ul>\n\n                <li>\n                    <NavLink to=\"/profile\" activeClassName={navigationClasses.active}>\n                        <img src={profileIcon} alt=\"Profile icon\"/>\n                        <span>Profile</span>\n                    </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/messages\" activeClassName={navigationClasses.active}>\n                        <img src={messagesIcon} alt=\"Messages icon\"/>\n                        <span>Messages</span>\n                    </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/users\" activeClassName={navigationClasses.active}>\n                        <img src={usersIcon} alt=\"Users icon\"/>\n                        <span>Users</span>\n                    </NavLink>\n                </li>\n\n            </ul>\n\n            <div className={navigationClasses.friendsBlock}>\n\n                <div>\n                    <h1>Friends</h1>\n                </div>\n\n                <div className={navigationClasses.friends}>\n                    {isLoading\n                        ? <Loading />\n                        : friendsList.length !== 0\n                            ? friendsList\n                            : 'Follow somebody'\n                    }\n                </div>\n\n            </div>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport {getFriendsList} from \"../../redux/reducers/asideReducer\";\n\nclass NavigationContainer extends React.Component {\n    componentDidMount() {\n        this.props.getFriendsList()\n    }\n\n    render() {\n        return <Navigation friends={this.props.friends} isLoading={this.props.isLoading} />\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.friends !== prevProps.friends) {\n\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        friends: state.aside.friends,\n        isLoading: state.aside.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {getFriendsList}\n) (NavigationContainer);\n","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n\n    const activateEditMode = () => {\n        if (props.isOwner) {\n            setEditMode(true);\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    const handleFocus = (e) => {\n        e.target.select()\n    }\n\n    return (\n        <div>\n            {editMode\n                ?   <div> <input onBlur={deactivateEditMode}\n                                 autoFocus={true}\n                                 onFocus={handleFocus}\n                                 onChange={onStatusChange}\n                                 value={status} />\n                    </div>\n                :   <div onClick={activateEditMode} > {props.status\n                            ? props.status\n                            : 'There could be a status here, but...'}\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport {Input, Textarea} from \"../../../common/formsControl/FormsControl\";\nimport {Field, reduxForm} from \"redux-form\";\nimport formControlClasses from \"../../../common/formsControl/formscontol.module.css\";\nimport profileClasses from \"../profile.module.css\";\n\nconst ProfileInfoForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit} className={profileClasses.data}>\n            <div className={profileClasses.dataItemName}>\n                <h1>Full Name:</h1>\n                <Field component={Input} name='fullName' placeholder='Full Name' className={profileClasses.field} />\n            </div>\n\n            <div className={profileClasses.dataItemCheck}>\n                <h1>Looking for a job:</h1>\n                <Field component={Input} name='lookingForAJob' type='checkbox'/>\n            </div>\n\n            <div className={profileClasses.dataItemField}>\n                <h1>Professional skills:</h1>\n                <Field component={Textarea} name='lookingForAJobDescription' placeholder='Professional skills' className={profileClasses.fieldText} />\n            </div>\n\n            <div className={profileClasses.dataItemField}>\n                <h1>About me:</h1>\n                <Field component={Textarea} name='aboutMe' placeholder='About me' className={profileClasses.fieldText} />\n            </div>\n\n            <div className={profileClasses.dataItemContacts}>\n                <h1>Contacts:</h1>\n                {Object.keys(profile.contacts).map(key => {\n                    return <div key={key} className={profileClasses.contacts}>\n                        <h2>{key}:</h2>\n                        <Field component={Input} name={'contacts.' + key} placeholder={key} className={profileClasses.social}/>\n                    </div>\n                })}\n            </div>\n\n            {error && <div className={formControlClasses.formSummaryError}>{error}</div>}\n\n            <div className={profileClasses.button}>\n                <button>Save</button>\n            </div>\n        </form>\n    );\n};\n\nconst ProfileInfoReduxForm = reduxForm({form: 'editProfile'})(ProfileInfoForm)\n\nexport default ProfileInfoReduxForm;\n","import React, {useState} from 'react';\nimport profileClasses from './profile.module.css';\nimport avatar from './../../../assets/img/unknownUser.jpeg';\nimport Loading from \"../../common/loading/Loading\";\nimport ProfileStatus from \"./status/ProfileStatus\";\nimport ProfileInfoForm from \"./info/ProfileInfoForm\";\n\nconst Profile = ({profile, savePhoto, saveProfileData, isOwner, status, updateStatus}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <div className={profileClasses.profileLoading}>\n            <Loading />\n        </div>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfileData(formData).then(() => {\n            setEditMode(false)\n        });\n    }\n\n    return (\n        <div className={profileClasses.profile}>\n\n            <div className={profileClasses.photo}>\n                <img src={profile.photos.large ? profile.photos.large : avatar} alt=\"Profile avatar\"/>\n                {isOwner\n                && <div className={profileClasses.upload}>\n                        <button>Add photo</button>\n                        <input type=\"file\" onChange={onMainPhotoSelected}/>\n                   </div>\n                }\n            </div>\n\n            <div className={profileClasses.info}>\n                <h2>{profile.fullName ? profile.fullName : 'Name'}</h2>\n\n                <div className={profileClasses.status}>\n                    <ProfileStatus status={status} isOwner={isOwner} updateStatus={updateStatus} />\n                </div>\n\n                {editMode\n                    ? <ProfileInfoForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                    : <ProfileInfo profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}} />\n                }\n\n            </div>\n\n        </div>\n    );\n};\n\nconst ProfileInfo = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div className={profileClasses.data}>\n            <div className={profileClasses.dataItem}>\n                <h1>Looking for a job: </h1>\n                <p>{profile.lookingForAJob ? 'Yes' : 'No'}</p>\n            </div>\n\n            <div className={profileClasses.dataItem}>\n                <h1>Professional skills:</h1>\n                <p>{profile.lookingForAJobDescription}</p>\n            </div>\n\n            <div className={profileClasses.dataItem}>\n                <h1>About me: </h1>\n                <p>{profile.aboutMe}</p>\n            </div>\n\n            <div className={profileClasses.dataItemContacts}>\n                <h1>Contacts:</h1> {Object.keys(profile.contacts).map(key => {\n                return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n            </div>\n\n            {isOwner &&\n            <div className={profileClasses.button}>\n                <button onClick={goToEditMode}>Edit</button>\n            </div>\n            }\n\n        </div>\n    )\n}\n\nconst Contacts = ({contactTitle, contactValue}) => {\n    return (\n        <div>\n            {contactValue && <div className={profileClasses.contacts}>\n                <h2>{contactTitle\n                    ? contactValue && contactTitle\n                    : null}\n                </h2>\n                <a href={contactValue} target='_blank' rel=\"noreferrer\">{contactValue}</a>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default Profile;\n","import React from 'react';\nimport postClasses from './post.module.css';\n\nconst Post = ({url, author, date, title, text}) => {\n    return (\n        <div className={postClasses.post}>\n            <div className={postClasses.header}>\n\n                <div className={postClasses.left}>\n                    <img src={url} alt=\"Author avatar\"/>\n                </div>\n\n                <div className={postClasses.author}>\n                    <h4>{author}</h4>\n                    <p>{date}</p>\n                </div>\n\n            </div>\n\n            <div className={postClasses.content}>\n                <h2>{title}</h2>\n                <p>{text}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n","import React from 'react';\nimport postsClasses from './posts.module.css';\nimport Post from \"./post/Post\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/formsControl/FormsControl\";\n\nconst Posts = (props) => {\n    let posts = [...props.posts]\n        .reverse()\n        .map(post => <Post\n        key={post.id}\n        author={post.author}\n        date={post.date}\n        title={post.title}\n        text={post.text}\n        url={post.url}\n    />)\n\n    let addPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n        <div className={postsClasses.posts}>\n\n            <div>\n                <h1>Add post</h1>\n            </div>\n\n            <div className={postsClasses.addPost}>\n\n                <ReduxPostForm onSubmit={addPost} />\n\n            </div>\n\n            {posts}\n\n        </div>\n    );\n};\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name='newPostText' component={Textarea} placeholder='Add your post' validate={[requiredField, maxLength30]} />\n            <div><button>Add</button></div>\n        </form>\n    )\n}\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('postForm'));\n\nconst ReduxPostForm = reduxForm({form: 'postForm', onSubmitSuccess: afterSubmit})(PostForm)\n\nexport default Posts;\n","import {addPost} from \"../../../redux/reducers/profileReducer\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {addPost}\n) (Posts);\n","import React from 'react';\nimport Profile from \"./profile/Profile\";\nimport PostsContainer from \"./posts/PostsContainer\";\n\nconst Content = ({profile, saveProfileData, savePhoto, isOwner, status, updateStatus}) => {\n    return (\n        <aside>\n\n            <Profile profile={profile}\n                     saveProfileData={saveProfileData}\n                     savePhoto={savePhoto}\n                     isOwner={isOwner}\n                     status={status}\n                     updateStatus={updateStatus} />\n\n            <PostsContainer />\n\n        </aside>\n    );\n};\n\nexport default Content;\n","import React from 'react';\nimport Content from \"./Content\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfileData, updateStatus} from \"../../redux/reducers/profileReducer\";\nimport {withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\n\nclass ContentContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return <Content {...this.props} profile={this.props.profile} saveProfileData={this.props.saveProfileData} savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.userId} status={this.props.status} updateStatus={this.props.updateStatus} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfileData}),\n)(ContentContainer);\n","export default __webpack_public_path__ + \"static/media/logo.224ee00a.svg\";","import React from 'react';\nimport logo from './../../assets/img/logo.svg';\nimport headerClasses from './header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = ({isAuth, login, logout}) => {\n    return (\n        <header className={headerClasses.header}>\n\n            <div className={headerClasses.logotype}>\n                <NavLink to='/profile'>\n                    <img src={logo} alt=\"M logotype\"/>\n                </NavLink>\n            </div>\n\n            <div className={headerClasses.login}>\n                {isAuth\n                    ? <h1>{login} - <button className={headerClasses.logout} onClick={logout}>Logout</button></h1>\n                    : <NavLink to='/login'>Login</NavLink>\n                }\n            </div>\n\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/reducers/authReducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {logout}\n) (HeaderContainer);\n","import React from \"react\";\nimport {compose} from \"redux\";\nimport {Route, withRouter} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/reducers/appReducer\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport './App.css'\nimport Footer from \"./components/footer/Footer\";\nimport NavigationContainer from \"./components/navigation/NavigationContainer\";\nimport ContentContainer from \"./components/content/ContentContainer\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport Loading from \"./components/common/loading/Loading\";\n\n// components for lazy loading\nconst MessagesContainer = React.lazy(() => import('./components/messages/MessagesContainer'));\nconst UsersContainer = React.lazy(() => import('./components/users/UsersContainer'));\nconst LoginPage = React.lazy(() => import('./components/login/Login'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Loading />\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <NavigationContainer />\n                <div className='app-content'>\n                    <Route path='/profile/:userId?' render={ () => <ContentContainer /> }/>\n                    <Route path='/messages' render={withSuspense(MessagesContainer)}/>\n                    <Route path='/users' render={withSuspense(UsersContainer)}/>\n                    <Route path='/login' render={withSuspense(LoginPage)}/>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized,\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n","import React from 'react';\nimport store from './redux/store';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n","import React from 'react';\nimport loadingClasses from './loading.module.css';\n\nconst Loading = () => {\n    return (\n        <div className={loadingClasses.loading}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React from 'react';\nimport formControlClasses from './formscontol.module.css';\n\nexport const Textarea = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={formControlClasses.formControl + ' ' + (hasError ? formControlClasses.error : '')}>\n            <textarea {...input} {...props} />\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n};\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={formControlClasses.formControl + ' ' + (hasError ? formControlClasses.error : '')}>\n            <input {...input} {...props} />\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n","import {usersAPI} from \"../../api/api\";\n\nconst GET_FRIENDS = 'GET-FRIENDS';\nconst TOGGLE_IS_LOADING = 'TOGGLE-IS-LOADING';\n\nlet initialState = {\n    friends: [],\n    isLoading: false,\n}\n\nconst asideReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_FRIENDS:\n            return {\n                ...state,\n                friends: action.friends,\n            }\n\n        case TOGGLE_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const getFriends = (friends) => ({type: GET_FRIENDS, friends})\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading})\n\nexport const getFriendsList = () => {\n\n    return async (dispatch) => {\n        dispatch(toggleIsLoading(true));\n\n        const data = await usersAPI.getFriends();\n\n        dispatch(toggleIsLoading(false));\n        dispatch(getFriends(data.items));\n    }\n}\n\nexport default asideReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formscontol_formControl__3GBCo\",\"error\":\"formscontol_error__3T9u-\",\"formSummaryError\":\"formscontol_formSummaryError__ulmBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__unRcd\",\"active\":\"navigation_active__3_qnU\",\"friendsBlock\":\"navigation_friendsBlock__E3nj3\",\"friends\":\"navigation_friends__2ayIw\"};","export default __webpack_public_path__ + \"static/media/unknownUser.6cf2a92e.jpeg\";","import {authAPI} from \"../../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET-USER-DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    const response = await authAPI.authMe();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true))\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe);\n\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Wrong data';\n        dispatch(stopSubmit('login', {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    const response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\nexport default authReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__1jCQ3\",\"header\":\"post_header__2t5cH\",\"left\":\"post_left__1q5zG\",\"author\":\"post_author__1OlPZ\",\"content\":\"post_content__QUk1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"logotype\":\"header_logotype__3t_N6\",\"login\":\"header_login__3v_4I\",\"logout\":\"header_logout__1MXam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1lZIc\",\"leftCol\":\"footer_leftCol__-Ohmk\",\"rightCol\":\"footer_rightCol__3BfnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__1bWIq\",\"photo\":\"friend_photo__2cFYB\",\"name\":\"friend_name__3gArK\"};","export const requiredField = value => {\n    if (value) {\n        return undefined;\n    }\n\n    return 'Required field';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`;\n    }\n\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__29oo6\",\"addPost\":\"posts_addPost__3cpu9\"};"],"sourceRoot":""}