{"version":3,"sources":["components/content/profile/profile.module.css","components/content/posts/posts.module.css","redux/reducers/messagesReducer.js","redux/reducers/usersReducer.js","redux/reducers/errorReducer.js","components/common/loading/loading.module.css","components/common/error/error.module.css","api/api.js","redux/reducers/profileReducer.js","redux/reducers/appReducer.js","redux/store.js","hoc/withSuspense.js","assets/img/vk.svg","assets/img/github.svg","components/footer/Footer.jsx","assets/img/profile.svg","assets/img/messages.svg","assets/img/users.svg","components/navigation/friends/Friend.jsx","components/navigation/Navigation.jsx","components/navigation/NavigationContainer.jsx","components/content/profile/status/ProfileStatus.jsx","components/content/profile/info/ProfileInfoForm.jsx","components/content/profile/Profile.jsx","components/content/posts/post/Post.jsx","components/content/posts/Posts.jsx","components/content/posts/PostsContainer.jsx","components/content/Content.jsx","components/content/ContentContainer.jsx","assets/img/logo.svg","components/header/Header.jsx","components/header/HeaderContainer.jsx","components/common/error/Error.jsx","App.js","index.js","components/common/loading/Loading.jsx","components/common/formsControl/FormsControl.jsx","redux/reducers/asideReducer.js","components/common/formsControl/formscontol.module.css","components/navigation/navigation.module.css","assets/img/unknownUser.jpeg","redux/reducers/authReducer.js","components/content/posts/post/post.module.css","components/header/header.module.css","components/footer/footer.module.css","components/navigation/friends/friend.module.css","utils/validators/validators.js"],"names":["module","exports","SEND_MESSAGE","initialState","messagesData","sendMessage","newMessageText","type","messagesReducer","state","action","newMessage","id","message","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","FOLLOW","UNFOLLOW","TOGGLE_IS_LOADING","TOGGLE_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isLoading","followingProgress","toggleIsLoading","toggleFollowingProgress","userId","setCurrentPage","pageNumber","followSuccess","unfollowSuccess","getUsers","dispatch","a","usersAPI","data","items","totalCount","catchError","follow","resultCode","getFriendsList","unfollow","usersReducer","filter","map","user","followed","CATCH_ERROR","error","errorMessage","errorReducer","instance","axios","withCredentials","baseURL","headers","get","then","response","getFriends","post","delete","authAPI","authMe","login","email","password","rememberMe","captcha","logout","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfileData","profileData","securityAPI","getCaptchaUrl","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","postsData","profile","setStatus","getUserProfile","profileReducer","newPost","author","date","title","text","newPostText","url","avatar","photos","INITIALIZED","initialized","appReducer","reducers","combineReducers","profilePage","messagesPage","aside","asideReducer","usersPage","auth","authReducer","app","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Component","props","Suspense","fallback","Loading","Footer","className","footerClasses","footer","leftCol","href","target","rel","src","vkIcon","alt","githubIcon","rightCol","Friend","name","to","friendClasses","friend","toLowerCase","photo","Navigation","friends","friendsList","large","navigationClasses","navigation","activeClassName","active","profileIcon","messagesIcon","usersIcon","friendsBlock","length","NavigationContainer","this","prevProps","prevState","snapshot","React","connect","ProfileStatus","useState","editMode","setEditMode","useEffect","onBlur","autoFocus","onFocus","e","select","onChange","currentTarget","value","onClick","isOwner","ProfileInfoReduxForm","reduxForm","handleSubmit","onSubmit","profileClasses","dataItemName","Field","component","Input","placeholder","field","dataItemCheck","dataItemField","Textarea","fieldText","dataItemContacts","Object","keys","contacts","key","social","formControlClasses","formSummaryError","button","ProfileInfo","goToEditMode","dataItem","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contacts","Profile","profileLoading","upload","files","info","fullName","initialValues","Post","postClasses","header","left","content","maxLength30","maxLengthCreator","ReduxPostForm","onSubmitSuccess","result","reset","validate","requiredField","Posts","posts","reverse","postsClasses","addPost","values","Content","PostsContainer","ContentContainer","match","params","authorizedUserId","history","push","refreshProfile","compose","withRouter","isAuth","file","getState","stopSubmit","_error","messages","Promise","reject","Header","headerClasses","logotype","logo","HeaderContainer","Error","errorClasses","MessagesContainer","lazy","UsersContainer","LoginPage","App","initializeApp","exact","path","render","promise","getAuthUserData","all","ReactDOM","document","getElementById","loadingClasses","loading","input","meta","hasError","touched","formControl","GET_FRIENDS","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","maxLength"],"mappings":"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","file":"static/js/main.07c4948e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1J6m0\",\"profileLoading\":\"profile_profileLoading__6b-v7\",\"photo\":\"profile_photo__1Sw9L\",\"upload\":\"profile_upload__3MOeI\",\"info\":\"profile_info__1XW5B\",\"status\":\"profile_status__3r-jF\",\"data\":\"profile_data__3iiHG\",\"button\":\"profile_button__jGi_t\",\"dataItem\":\"profile_dataItem__2CDL6\",\"dataItemName\":\"profile_dataItemName__3KMiB\",\"dataItemCheck\":\"profile_dataItemCheck__2QLfe\",\"dataItemContacts\":\"profile_dataItemContacts__lxXNs\",\"dataItemField\":\"profile_dataItemField__1EQxQ\",\"contacts\":\"profile_contacts__3JCNb\",\"field\":\"profile_field__AP8Tm\",\"fieldText\":\"profile_fieldText__2LKmb\",\"social\":\"profile_social__3CJJu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"posts_posts__29oo6\",\"addPost\":\"posts_addPost__3cpu9\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\n\nlet initialState = {\n    messagesData: [],\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let newMessage = {\n                id: 4,\n                message: action.newMessageText\n            };\n            return {\n                ...state,\n                messagesData: [...state.messagesData, newMessage],\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const sendMessage = (newMessageText) => ({type: SEND_MESSAGE, newMessageText})\n\nexport default messagesReducer;\n","import {usersAPI} from \"../../api/api\";\nimport {getFriendsList} from \"./asideReducer\";\nimport {catchError} from \"./errorReducer\";\n\nconst SET_USERS = 'SET-USERS';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst TOGGLE_IS_LOADING = 'TOGGLE-IS-LOADING';\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE-FOLLOWING-PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 12,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isLoading: false,\n    followingProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USERS:\n            return {\n                ...state,\n                users: action.users,\n            }\n\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.pageNumber,\n            }\n\n        case SET_TOTAL_USERS_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalCount,\n            }\n\n        case TOGGLE_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n\n        case TOGGLE_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingProgress: action.isLoading\n                    ? [...state.followingProgress, action.userId]\n                    : state.followingProgress.filter(id => id !== action.userId)\n            }\n\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: true}\n                    }\n                    return user;\n                })\n            }\n\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: false}\n                    }\n                    return user;\n                })\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading})\nexport const toggleFollowingProgress = (isLoading, userId) => ({type: TOGGLE_FOLLOWING_PROGRESS, isLoading, userId})\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USERS_COUNT, totalCount})\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber})\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\n\nexport const getUsers = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        try {\n            dispatch(toggleIsLoading(true));\n            dispatch(setCurrentPage(currentPage))\n\n            const data = await usersAPI.getUsers(currentPage, pageSize);\n\n            dispatch(toggleIsLoading(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        } catch (e) {\n            const message = e.message\n            dispatch(catchError(true, message))\n        }\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        try {\n            dispatch(toggleFollowingProgress(true, userId));\n\n            const response = await usersAPI.follow(userId)\n\n            if (response.data.resultCode === 0) {\n                dispatch(followSuccess(userId))\n                dispatch(getFriendsList())\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n        } catch (e) {\n            const message = e.message\n            dispatch(catchError(true, message))\n        }\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        try {\n            dispatch(toggleFollowingProgress(true, userId));\n\n            const response = await usersAPI.unfollow(userId);\n\n            if (response.data.resultCode === 0) {\n                dispatch(unfollowSuccess(userId))\n                dispatch(getFriendsList())\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n        } catch (e) {\n            const message = e.message\n            dispatch(catchError(true, message))\n        }\n    }\n}\n\nexport default usersReducer;\n","const CATCH_ERROR = 'CATCH-ERROR';\n\nlet initialState = {\n    error: false,\n    errorMessage: null,\n}\n\nconst errorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CATCH_ERROR:\n            return {\n                ...state,\n                error: action.error,\n                errorMessage: action.errorMessage\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const catchError = (error, errorMessage) => ({type: CATCH_ERROR, error, errorMessage})\n\nexport default errorReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"loading_loading__1Af0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"error_error__OQwvZ\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY': 'a60e2925-9e48-4e88-a8f4-0ca5f14206c3'},\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 12) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data\n            });\n    },\n\n    getFriends() {\n        return instance.get(`users?friend=true`)\n            .then(response => {\n                return response.data\n            });\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n}\n\nexport const authAPI = {\n    authMe() {\n        return instance.get(`auth/me`)\n    },\n\n    login(email, password, rememberMe = false, captcha = null) {\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n\n    updateStatus(status) {\n        return instance.put(`profile/status/`, {status: status});\n    },\n\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append('image', photoFile)\n\n        return instance.put(`profile/photo`, formData);\n    },\n\n    saveProfileData(profileData) {\n        return instance.put(`profile`, profileData)\n    },\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`);\n    },\n\n}\n","import avatar from './../../assets/img/unknownUser.jpeg';\nimport {profileAPI} from \"../../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {catchError} from \"./errorReducer\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS';\n\nlet initialState = {\n    postsData: [],\n    profile: null,\n    status: null,\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 1,\n                author: 'Maxim Abuzarov',\n                date: '15 June 2021',\n                title: 'Post #1',\n                text: action.newPostText,\n                url: avatar,\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n            }\n\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile,\n            }\n\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status,\n            }\n\n        case SAVE_PHOTO_SUCCESS:\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const addPost = (newPostText) => ({type: ADD_POST, newPostText})\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\nexport const setStatus = (status) => ({type: SET_STATUS, status})\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    try {\n        const response = await profileAPI.getProfile(userId);\n\n        dispatch(setUserProfile(response.data))\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    try {\n        const response = await profileAPI.getStatus(userId);\n\n        dispatch(setStatus(response.data))\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    try {\n        const response = await profileAPI.updateStatus(status);\n\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    try {\n        const response = await profileAPI.savePhoto(file);\n\n        if (response.data.resultCode === 0) {\n            dispatch(savePhotoSuccess(response.data.data.photos))\n        }\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const saveProfileData = (profileData) => async (dispatch, getState) => {\n    try {\n        const userId = getState().auth.userId;\n        const response = await profileAPI.saveProfileData(profileData);\n        if (response.data.resultCode === 0) {\n            dispatch(getUserProfile(userId))\n        } else {\n            dispatch(stopSubmit('editProfile', {_error: response.data.messages[0]}))\n\n            return Promise.reject(response.data.messages[0])\n        }\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport default profileReducer;\n","import {getAuthUserData} from \"./authReducer\";\n\nconst INITIALIZED = 'INITIALIZED';\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED:\n            return {\n                ...state,\n                initialized: true,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALIZED})\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData())\n\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport profileReducer from \"./reducers/profileReducer\";\nimport messagesReducer from \"./reducers/messagesReducer\";\nimport asideReducer from \"./reducers/asideReducer\";\nimport usersReducer from \"./reducers/usersReducer\";\nimport authReducer from \"./reducers/authReducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./reducers/appReducer\";\nimport errorReducer from \"./reducers/errorReducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    messagesPage: messagesReducer,\n    aside: asideReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    error: errorReducer,\n    form: formReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from \"react\";\nimport Loading from \"../components/common/loading/Loading\";\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return (\n            <React.Suspense fallback={<Loading />}>\n                <Component {...props} />\n            </React.Suspense>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/vk.e9553eae.svg\";","export default __webpack_public_path__ + \"static/media/github.9544f549.svg\";","import React from 'react';\nimport footerClasses from './footer.module.css';\nimport vkIcon from './../../assets/img/vk.svg'\nimport githubIcon from './../../assets/img/github.svg';\n\nconst Footer = () => {\n    return (\n        <footer className={footerClasses.footer}>\n\n            <div className={footerClasses.leftCol}>\n                <ul>\n                    <li>\n                        <a href=\"https://vk.com/maxim.abuzarov\" target='_blank' rel=\"noreferrer\">\n                            <img src={vkIcon} alt=\"VK icon\"/>\n                            <span>VK</span>\n                        </a>\n                    </li>\n                </ul>\n                <ul>\n                    <li>\n                        <a href=\"https://github.com/maxim-abuzarov\" target='_blank' rel=\"noreferrer\">\n                            <img src={githubIcon} alt=\"Github icon\"/>\n                            <span>GitHub</span>\n                        </a>\n                    </li>\n                </ul>\n            </div>\n\n            <div className={footerClasses.rightCol}>\n                <p>\t&copy; Abuzarov Maxim, 2021</p>\n            </div>\n\n        </footer>\n    );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/profile.d54ae6c5.svg\";","export default __webpack_public_path__ + \"static/media/messages.4a3a2c6a.svg\";","export default __webpack_public_path__ + \"static/media/users.9c5d22db.svg\";","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport friendClasses from './friend.module.css';\nimport avatar from './../../../assets/img/unknownUser.jpeg';\n\nconst Friend = ({id, name, url}) => {\n    return (\n        <NavLink to={'/profile/' + id} className={friendClasses.friend}>\n\n            <div className={friendClasses.name}>\n\n                {name.toLowerCase()}\n\n            </div>\n\n            <div className={friendClasses.photo}>\n\n                <img src={url ? url : avatar} alt='Friend avatar'/>\n\n            </div>\n\n        </NavLink>\n    );\n};\n\nexport default Friend;\n","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport navigationClasses from './navigation.module.css';\nimport profileIcon from './../../assets/img/profile.svg';\nimport messagesIcon from './../../assets/img/messages.svg';\nimport usersIcon from './../../assets/img/users.svg';\nimport Friend from \"./friends/Friend\";\nimport Loading from \"../common/loading/Loading\";\n\nconst Navigation = ({friends, isLoading}) => {\n    let friendsList = friends.map(friend => <Friend\n        key={friend.id}\n        id={friend.id}\n        name={friend.name}\n        url={friend.photos.large}\n    />)\n\n    return (\n        <nav className={navigationClasses.navigation}>\n            <ul>\n\n                <li>\n                    <NavLink to=\"/profile\" activeClassName={navigationClasses.active}>\n                        <img src={profileIcon} alt=\"Profile icon\"/>\n                        <span>Profile</span>\n                    </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/messages\" activeClassName={navigationClasses.active}>\n                        <img src={messagesIcon} alt=\"Messages icon\"/>\n                        <span>Messages</span>\n                    </NavLink>\n                </li>\n\n                <li>\n                    <NavLink to=\"/users\" activeClassName={navigationClasses.active}>\n                        <img src={usersIcon} alt=\"Users icon\"/>\n                        <span>Users</span>\n                    </NavLink>\n                </li>\n\n            </ul>\n\n            <div className={navigationClasses.friendsBlock}>\n\n                <div>\n                    <h1>Friends</h1>\n                </div>\n\n                <div className={navigationClasses.friends}>\n                    {isLoading\n                        ? <Loading />\n                        : friendsList.length !== 0\n                            ? friendsList\n                            : 'Follow somebody'\n                    }\n                </div>\n\n            </div>\n        </nav>\n    );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport {getFriendsList} from \"../../redux/reducers/asideReducer\";\n\nclass NavigationContainer extends React.Component {\n    componentDidMount() {\n        this.props.getFriendsList()\n    }\n\n    render() {\n        return <Navigation friends={this.props.friends} isLoading={this.props.isLoading} />\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.friends !== prevProps.friends) {\n\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        friends: state.aside.friends,\n        isLoading: state.aside.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {getFriendsList}\n) (NavigationContainer);\n","import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = (props) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status])\n\n    const activateEditMode = () => {\n        if (props.isOwner) {\n            setEditMode(true);\n        }\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    const handleFocus = (e) => {\n        e.target.select()\n    }\n\n    return (\n        <div>\n            {editMode\n                ?   <div> <input onBlur={deactivateEditMode}\n                                 autoFocus={true}\n                                 onFocus={handleFocus}\n                                 onChange={onStatusChange}\n                                 value={status} />\n                    </div>\n                :   <div onClick={activateEditMode} > {props.status\n                            ? props.status\n                            : 'There could be a status here, but...'}\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport {Input, Textarea} from \"../../../common/formsControl/FormsControl\";\nimport {Field, reduxForm} from \"redux-form\";\nimport formControlClasses from \"../../../common/formsControl/formscontol.module.css\";\nimport profileClasses from \"../profile.module.css\";\n\nconst ProfileInfoForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit} className={profileClasses.data}>\n            <div className={profileClasses.dataItemName}>\n                <h1>Full Name:</h1>\n                <Field component={Input} name='fullName' placeholder='Full Name' className={profileClasses.field} />\n            </div>\n\n            <div className={profileClasses.dataItemCheck}>\n                <h1>Looking for a job:</h1>\n                <Field component={Input} name='lookingForAJob' type='checkbox'/>\n            </div>\n\n            <div className={profileClasses.dataItemField}>\n                <h1>Professional skills:</h1>\n                <Field component={Textarea} name='lookingForAJobDescription' placeholder='Professional skills' className={profileClasses.fieldText} />\n            </div>\n\n            <div className={profileClasses.dataItemField}>\n                <h1>About me:</h1>\n                <Field component={Textarea} name='aboutMe' placeholder='About me' className={profileClasses.fieldText} />\n            </div>\n\n            <div className={profileClasses.dataItemContacts}>\n                <h1>Contacts:</h1>\n                {Object.keys(profile.contacts).map(key => {\n                    return <div key={key} className={profileClasses.contacts}>\n                        <h2>{key}:</h2>\n                        <Field component={Input} name={'contacts.' + key} placeholder={key} className={profileClasses.social}/>\n                    </div>\n                })}\n            </div>\n\n            {error && <div className={formControlClasses.formSummaryError}>{error}</div>}\n\n            <div className={profileClasses.button}>\n                <button>Save</button>\n            </div>\n        </form>\n    );\n};\n\nconst ProfileInfoReduxForm = reduxForm({form: 'editProfile'})(ProfileInfoForm)\n\nexport default ProfileInfoReduxForm;\n","import React, {useState} from 'react';\nimport profileClasses from './profile.module.css';\nimport avatar from './../../../assets/img/unknownUser.jpeg';\nimport Loading from \"../../common/loading/Loading\";\nimport ProfileStatus from \"./status/ProfileStatus\";\nimport ProfileInfoForm from \"./info/ProfileInfoForm\";\n\nconst Profile = ({profile, savePhoto, saveProfileData, isOwner, status, updateStatus}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <div className={profileClasses.profileLoading}>\n            <Loading />\n        </div>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfileData(formData).then(() => {\n            setEditMode(false)\n        });\n    }\n\n    return (\n        <div className={profileClasses.profile}>\n\n            <div className={profileClasses.photo}>\n                <img src={profile.photos.large ? profile.photos.large : avatar} alt=\"Profile avatar\"/>\n                {isOwner\n                && <div className={profileClasses.upload}>\n                        <button>Add photo</button>\n                        <input type=\"file\" onChange={onMainPhotoSelected}/>\n                   </div>\n                }\n            </div>\n\n            <div className={profileClasses.info}>\n                <h2>{profile.fullName ? profile.fullName : 'Name'}</h2>\n\n                <div className={profileClasses.status}>\n                    <ProfileStatus status={status} isOwner={isOwner} updateStatus={updateStatus} />\n                </div>\n\n                {editMode\n                    ? <ProfileInfoForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\n                    : <ProfileInfo profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}} />\n                }\n\n            </div>\n\n        </div>\n    );\n};\n\nconst ProfileInfo = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div className={profileClasses.data}>\n            <div className={profileClasses.dataItem}>\n                <h1>Looking for a job: </h1>\n                <p>{profile.lookingForAJob ? 'Yes' : 'No'}</p>\n            </div>\n\n            <div className={profileClasses.dataItem}>\n                <h1>Professional skills:</h1>\n                <p>{profile.lookingForAJobDescription}</p>\n            </div>\n\n            <div className={profileClasses.dataItem}>\n                <h1>About me: </h1>\n                <p>{profile.aboutMe}</p>\n            </div>\n\n            <div className={profileClasses.dataItemContacts}>\n                <h1>Contacts:</h1> {Object.keys(profile.contacts).map(key => {\n                return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\n            })}\n            </div>\n\n            {isOwner &&\n            <div className={profileClasses.button}>\n                <button onClick={goToEditMode}>Edit</button>\n            </div>\n            }\n\n        </div>\n    )\n}\n\nconst Contacts = ({contactTitle, contactValue}) => {\n    return (\n        <div>\n            {contactValue && <div className={profileClasses.contacts}>\n                <h2>{contactTitle\n                    ? contactValue && contactTitle\n                    : null}\n                </h2>\n                <a href={contactValue} target='_blank' rel=\"noreferrer\">{contactValue}</a>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default Profile;\n","import React from 'react';\nimport postClasses from './post.module.css';\n\nconst Post = ({url, author, date, title, text}) => {\n    return (\n        <div className={postClasses.post}>\n            <div className={postClasses.header}>\n\n                <div className={postClasses.left}>\n                    <img src={url} alt=\"Author avatar\"/>\n                </div>\n\n                <div className={postClasses.author}>\n                    <h4>{author}</h4>\n                    <p>{date}</p>\n                </div>\n\n            </div>\n\n            <div className={postClasses.content}>\n                <h2>{title}</h2>\n                <p>{text}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default Post;\n","import React from 'react';\nimport postsClasses from './posts.module.css';\nimport Post from \"./post/Post\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/formsControl/FormsControl\";\n\nconst Posts = (props) => {\n    let posts = [...props.posts]\n        .reverse()\n        .map(post => <Post\n        key={post.id}\n        author={post.author}\n        date={post.date}\n        title={post.title}\n        text={post.text}\n        url={post.url}\n    />)\n\n    let addPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    return (\n        <div className={postsClasses.posts}>\n\n            <div>\n                <h1>Add post</h1>\n            </div>\n\n            <div className={postsClasses.addPost}>\n\n                <ReduxPostForm onSubmit={addPost} />\n\n            </div>\n\n            {posts}\n\n        </div>\n    );\n};\n\nconst maxLength30 = maxLengthCreator(30)\n\nconst PostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field name='newPostText' component={Textarea} placeholder='Add your post' validate={[requiredField, maxLength30]} />\n            <div><button>Add</button></div>\n        </form>\n    )\n}\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('postForm'));\n\nconst ReduxPostForm = reduxForm({form: 'postForm', onSubmitSuccess: afterSubmit})(PostForm)\n\nexport default Posts;\n","import {addPost} from \"../../../redux/reducers/profileReducer\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.postsData,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {addPost}\n) (Posts);\n","import React from 'react';\nimport Profile from \"./profile/Profile\";\nimport PostsContainer from \"./posts/PostsContainer\";\n\nconst Content = ({profile, saveProfileData, savePhoto, isOwner, status, updateStatus}) => {\n    return (\n        <aside>\n\n            <Profile profile={profile}\n                     saveProfileData={saveProfileData}\n                     savePhoto={savePhoto}\n                     isOwner={isOwner}\n                     status={status}\n                     updateStatus={updateStatus} />\n\n            <PostsContainer />\n\n        </aside>\n    );\n};\n\nexport default Content;\n","import React from 'react';\nimport Content from \"./Content\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, savePhoto, saveProfileData, updateStatus} from \"../../redux/reducers/profileReducer\";\nimport {withRouter} from 'react-router-dom';\nimport {compose} from \"redux\";\n\nclass ContentContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.getUserProfile(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        return <Content {...this.props} profile={this.props.profile} saveProfileData={this.props.saveProfileData} savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.userId} status={this.props.status} updateStatus={this.props.updateStatus} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfileData}),\n)(ContentContainer);\n","export default __webpack_public_path__ + \"static/media/logo.224ee00a.svg\";","import React from 'react';\nimport logo from './../../assets/img/logo.svg';\nimport headerClasses from './header.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = ({isAuth, login, logout}) => {\n    return (\n        <header className={headerClasses.header}>\n\n            <div className={headerClasses.logotype}>\n                <NavLink to='/profile'>\n                    <img src={logo} alt=\"M logotype\"/>\n                </NavLink>\n            </div>\n\n            <div className={headerClasses.login}>\n                {isAuth\n                    ? <h1>{login} - <button className={headerClasses.logout} onClick={logout}>Logout</button></h1>\n                    : <NavLink to='/login'>Login</NavLink>\n                }\n            </div>\n\n        </header>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/reducers/authReducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\n\nexport default connect(mapStateToProps,\n    {logout}\n) (HeaderContainer);\n","import React from 'react';\nimport errorClasses from './error.module.css';\n\nconst Error = ({errorMessage}) => {\n    return (\n        <div className={errorClasses.error}>\n            <p>{errorMessage}</p>\n        </div>\n    );\n};\n\nexport default Error;","import React from \"react\";\nimport {compose} from \"redux\";\nimport {Redirect, Route, withRouter, Switch} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/reducers/appReducer\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport './App.css'\nimport Footer from \"./components/footer/Footer\";\nimport NavigationContainer from \"./components/navigation/NavigationContainer\";\nimport ContentContainer from \"./components/content/ContentContainer\";\nimport HeaderContainer from \"./components/header/HeaderContainer\";\nimport Loading from \"./components/common/loading/Loading\";\nimport Error from \"./components/common/error/Error\";\n\n// components for lazy loading\nconst MessagesContainer = React.lazy(() => import('./components/messages/MessagesContainer'));\nconst UsersContainer = React.lazy(() => import('./components/users/UsersContainer'));\nconst LoginPage = React.lazy(() => import('./components/login/Login'));\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Loading />\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                {this.props.error && <Error errorMessage={this.props.errorMessage}/>}\n                <NavigationContainer />\n                <div className='app-content'>\n                    <Switch>\n                        <Route exact path='/' render={ () => <Redirect to='/profile' />} />\n                        <Route path='/profile/:userId?' render={ () => <ContentContainer /> }/>\n                        <Route path='/messages' render={withSuspense(MessagesContainer)}/>\n                        <Route path='/users' render={withSuspense(UsersContainer)}/>\n                        <Route path='/login' render={withSuspense(LoginPage)}/>\n                        <Route path='*' render={ () => <div className='page404'>404 :(</div>}/>\n                    </Switch>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized,\n        error: state.error.error,\n        errorMessage: state.error.errorMessage,\n    }\n}\n\nexport default compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n","import React from 'react';\nimport store from './redux/store';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n","import React from 'react';\nimport loadingClasses from './loading.module.css';\n\nconst Loading = () => {\n    return (\n        <div className={loadingClasses.loading}>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React from 'react';\nimport formControlClasses from './formscontol.module.css';\n\nexport const Textarea = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={formControlClasses.formControl + ' ' + (hasError ? formControlClasses.error : '')}>\n            <textarea {...input} {...props} />\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n};\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <div className={formControlClasses.formControl + ' ' + (hasError ? formControlClasses.error : '')}>\n            <input {...input} {...props} />\n            {hasError && <span>{meta.error}</span>}\n        </div>\n    )\n}\n","import {usersAPI} from \"../../api/api\";\nimport {catchError} from \"./errorReducer\";\n\nconst GET_FRIENDS = 'GET-FRIENDS';\nconst TOGGLE_IS_LOADING = 'TOGGLE-IS-LOADING';\n\nlet initialState = {\n    friends: [],\n    isLoading: false,\n}\n\nconst asideReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_FRIENDS:\n            return {\n                ...state,\n                friends: action.friends,\n            }\n\n        case TOGGLE_IS_LOADING:\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const getFriends = (friends) => ({type: GET_FRIENDS, friends})\nexport const toggleIsLoading = (isLoading) => ({type: TOGGLE_IS_LOADING, isLoading})\n\nexport const getFriendsList = () => {\n    return async (dispatch) => {\n        try {\n            dispatch(toggleIsLoading(true));\n\n            const data = await usersAPI.getFriends();\n\n            dispatch(toggleIsLoading(false));\n            dispatch(getFriends(data.items));\n        } catch (e) {\n            const message = e.message\n            dispatch(catchError(true, message))\n        }\n    }\n}\n\nexport default asideReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formscontol_formControl__3GBCo\",\"error\":\"formscontol_error__3T9u-\",\"formSummaryError\":\"formscontol_formSummaryError__ulmBQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__unRcd\",\"active\":\"navigation_active__3_qnU\",\"friendsBlock\":\"navigation_friendsBlock__E3nj3\",\"friends\":\"navigation_friends__2ayIw\"};","export default __webpack_public_path__ + \"static/media/unknownUser.6cf2a92e.jpeg\";","import {authAPI, securityAPI} from \"../../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {catchError} from \"./errorReducer\";\n\nconst SET_USER_DATA = 'SET-USER-DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'GET-CAPTCHA-URL-SUCCESS';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\n\nexport const getAuthUserData = () => async (dispatch) => {\n    try {\n        const response = await authAPI.authMe();\n\n        if (response.data.resultCode === 0) {\n            let {id, login, email} = response.data.data;\n            dispatch(setAuthUserData(id, email, login, true))\n        }\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    try {\n        const response = await authAPI.login(email, password, rememberMe, captcha);\n\n        if (response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n        } else {\n            if (response.data.resultCode === 10) {\n                dispatch(getCaptchaUrl())\n            }\n\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Wrong data';\n            dispatch(stopSubmit('login', {_error: message}))\n        }\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    try {\n        const response = await securityAPI.getCaptchaUrl();\n        const captchaUrl = response.data.url;\n\n        dispatch(getCaptchaUrlSuccess(captchaUrl))\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    try {\n        const response = await authAPI.logout();\n\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n    } catch (e) {\n        const message = e.message\n        dispatch(catchError(true, message))\n    }\n}\n\nexport default authReducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__1jCQ3\",\"header\":\"post_header__2t5cH\",\"left\":\"post_left__1q5zG\",\"author\":\"post_author__1OlPZ\",\"content\":\"post_content__QUk1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"logotype\":\"header_logotype__3t_N6\",\"login\":\"header_login__3v_4I\",\"logout\":\"header_logout__1MXam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1lZIc\",\"leftCol\":\"footer_leftCol__-Ohmk\",\"rightCol\":\"footer_rightCol__3BfnC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"friend_friend__1bWIq\",\"photo\":\"friend_photo__2cFYB\",\"name\":\"friend_name__3gArK\"};","export const requiredField = value => {\n    if (value) {\n        return undefined;\n    }\n\n    return 'Required field';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) {\n        return `Max length is ${maxLength} symbols`;\n    }\n\n    return undefined;\n}\n"],"sourceRoot":""}