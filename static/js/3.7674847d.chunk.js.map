{"version":3,"sources":["components/messages/messages.module.css","components/messages/message/message.module.css","components/messages/friend/friend.module.css","components/messages/message/Message.jsx","components/messages/friend/Friend.jsx","components/messages/Messages.jsx","hoc/withAuthRedirect.js","components/messages/MessagesContainer.jsx"],"names":["module","exports","Message","message","className","messageClasses","Friend","id","url","name","to","friendClasses","friends","friend","src","avatar","alt","maxLength300","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","handleSubmit","onSubmit","Field","component","Textarea","validate","requiredField","placeholder","Messages","messages","sendMessage","friendsList","map","photos","large","messagesList","messagesClasses","leftCol","length","rightCol","head","write","writeMessage","values","newMessageText","mapStateToProps","state","isAuth","auth","compose","connect","aside","messagesPage","messagesData","Component","RedirectComponent","this","props","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,QAAU,0BAA0B,SAAW,2BAA2B,KAAO,uBAAuB,MAAQ,wBAAwB,aAAe,iC,oBCAnPD,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,yB,gHCU9CC,EARC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACd,OACI,qBAAKC,UAAWC,IAAeF,QAA/B,SACI,6BAAKA,O,kCCaFG,EAdA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,KACtB,OACI,cAAC,IAAD,CAASC,GAAI,eAAiBH,EAAIH,UAAWO,IAAcC,QAA3D,SACI,sBAAKR,UAAWO,IAAcE,OAA9B,UAEI,qBAAKC,IAAKN,GAAYO,IAAQC,IAAI,kBAElC,6BAAKP,U,0CCsDfQ,EAAeC,YAAiB,KAahCC,EAAsBC,YAAU,CAACC,KAAM,yBAA0BC,gBAFnD,SAACC,EAAQC,GAAT,OAAsBA,EAASC,YAAM,6BAE7BL,EAXL,SAAC,GAAoB,IAAnBM,EAAkB,EAAlBA,aACrB,OACI,uBAAMC,SAAUD,EAAhB,UACI,cAACE,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAef,GAAeR,KAAK,iBAAiBwB,YAAY,iCACvG,gDASGC,EAzEE,SAAC,GAAsC,IAArCtB,EAAoC,EAApCA,QAASuB,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAC9BC,EAAczB,EAAQ0B,KAAI,SAAAzB,GAAM,OAAI,cAAC,EAAD,CAEpCJ,KAAMI,EAAOJ,KACbF,GAAIM,EAAON,GACXC,IAAKK,EAAO0B,OAAOC,OAHd3B,EAAON,OAMZkC,EAAeN,EAASG,KAAI,SAAAnC,GAAO,OAAI,cAAC,EAAD,CAEvCA,QAASA,EAAQA,SADZA,EAAQI,OAQjB,OACI,sBAAKH,UAAWsC,IAAgBP,SAAhC,UAEI,sBAAK/B,UAAWsC,IAAgBC,QAAhC,UAEI,8BACI,2CAGJ,qBAAKvC,UAAWsC,IAAgB9B,QAAhC,SAC4B,IAAvByB,EAAYO,OACPP,EACA,uBAMd,sBAAKjC,UAAWsC,IAAgBG,SAAhC,UAEI,sBAAKzC,UAAWsC,IAAgBI,KAAhC,UACI,0CACCL,KAGL,qBAAKrC,UAAWsC,IAAgBK,MAAhC,SAEI,qBAAK3C,UAAWsC,IAAgBM,aAAhC,SAEI,cAAC7B,EAAD,CAAqBQ,SAjCrB,SAACsB,GACjBb,EAAYa,EAAOC,8B,uDClBvBC,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,S,QCQRE,sBACXC,aARoB,SAACJ,GACrB,MAAO,CACHxC,QAASwC,EAAMK,MAAM7C,QACrBuB,SAAUiB,EAAMM,aAAaC,gBAKR,CAACvB,mBDNE,SAACwB,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMV,OAET,cAACO,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUrD,GAAG,eAJT,GAEXsD,IAAMJ,WAQtC,OAAOJ,YAAQL,EAARK,CAA0BK,KCLtBN,CAGbrB","file":"static/js/3.7674847d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__34oTo\",\"leftCol\":\"messages_leftCol__2X-SZ\",\"friends\":\"messages_friends__13UKv\",\"rightCol\":\"messages_rightCol__2RL9s\",\"head\":\"messages_head__30Yix\",\"write\":\"messages_write__tMJZB\",\"writeMessage\":\"messages_writeMessage__2KKT6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__2zgqP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"friend_friends__1nQOj\",\"friend\":\"friend_friend__1Le-2\"};","import React from 'react';\nimport messageClasses from './message.module.css';\n\nconst Message = ({message}) => {\n    return (\n        <div className={messageClasses.message}>\n            <h3>{message}</h3>\n        </div>\n    );\n};\n\nexport default Message;\n","import React from 'react';\nimport friendClasses from './friend.module.css';\nimport {NavLink} from \"react-router-dom\";\nimport avatar from './../../../assets/img/unknownUser.jpeg';\n\nconst Friend = ({id, url, name}) => {\n    return (\n        <NavLink to={'/messages/id' + id} className={friendClasses.friends}>\n            <div className={friendClasses.friend}>\n\n                <img src={url ? url : avatar} alt='Friend avatar'/>\n\n                <h2>{name}</h2>\n\n            </div>\n        </NavLink>\n    );\n};\n\nexport default Friend;","import React from 'react';\nimport messagesClasses from './messages.module.css';\nimport Message from \"./message/Message\";\nimport Friend from \"./friend/Friend\";\nimport {Field, reduxForm, reset} from \"redux-form\";\nimport {Textarea} from \"../common/formsControl/FormsControl\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\n\nconst Messages = ({friends, messages, sendMessage}) => {\n    let friendsList = friends.map(friend => <Friend\n        key={friend.id}\n        name={friend.name}\n        id={friend.id}\n        url={friend.photos.large}\n    />)\n\n    let messagesList = messages.map(message => <Message\n        key={message.id}\n        message={message.message}\n    />)\n\n    let addNewMessage = (values) => {\n        sendMessage(values.newMessageText)\n    }\n\n    return (\n        <div className={messagesClasses.messages}>\n\n            <div className={messagesClasses.leftCol}>\n\n                <div>\n                    <h1>Dialogs</h1>\n                </div>\n\n                <div className={messagesClasses.friends}>\n                    {friendsList.length !== 0\n                        ? friendsList\n                        : 'Follow somebody'\n                    }\n                </div>\n\n            </div>\n\n            <div className={messagesClasses.rightCol}>\n\n                <div className={messagesClasses.head}>\n                    <h1>Messages</h1>\n                    {messagesList}\n                </div>\n\n                <div className={messagesClasses.write}>\n\n                    <div className={messagesClasses.writeMessage}>\n\n                        <AddMessageFormRedux onSubmit={addNewMessage} />\n\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n    );\n};\n\nconst maxLength300 = maxLengthCreator(300)\n\nconst AddMessageForm = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field component={Textarea} validate={[requiredField, maxLength300]} name='newMessageText' placeholder='Write message to your friend' />\n            <button>Send</button>\n        </form>\n    )\n}\n\nconst afterSubmit = (result, dispatch) => dispatch(reset('messagesAddMessageForm'));\n\nconst AddMessageFormRedux = reduxForm({form: 'messagesAddMessageForm', onSubmitSuccess: afterSubmit})(AddMessageForm)\n\nexport default Messages;\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props} />\n        }\n    }\n\n    return connect(mapStateToProps) (RedirectComponent)\n}\n","import {sendMessage} from \"../../redux/reducers/messagesReducer\";\nimport Messages from \"./Messages\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        friends: state.aside.friends,\n        messages: state.messagesPage.messagesData,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {sendMessage}),\n    withAuthRedirect,\n)(Messages);\n"],"sourceRoot":""}